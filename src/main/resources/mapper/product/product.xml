<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.idle.shoppingmall.mapper.Product.ProductMapper">
    <insert id="saveProduct" useGeneratedKeys="true" keyProperty="product_id">
        insert into product(pd_name, pd_price, brand_id, pd_category, created_at,count_love)
        values ( #{product.pd_name}, #{product.pd_price}, #{product.brand_id}, #{product.pd_category}
               ,#{product.created_at},#{product.count_love})
    </insert>

    <select id="findById" parameterType="Long" resultType="com.idle.shoppingmall.Entity.Product.Product">
        select * from product where product_id = #{product_id}
    </select>


    <select id="findAllProducts" resultType="com.idle.shoppingmall.Entity.Product.Product">
        select * from product
    </select>

    <update id="update" parameterType="com.idle.shoppingmall.Entity.Product.Product">
        update product set pd_name=#{pd_name},
        pd_price=#{pd_price},
        pd_category=#{pd_category},
        count_love=#{count_love}  <!-- count_love 필드 업데이트 추가 -->
        where product_id=#{product_id}
    </update>


    <delete id="delete" parameterType="Long">
        delete from product where product_id=#{product_id}
    </delete>

    <select id="findAllProductsPaged" resultType="com.idle.shoppingmall.Entity.Product.Product">
        select * from product
        order by product_id
        limit #{size} offset #{offset}
    </select>

    <select id="findAllByCreatedAtDesc" resultType="com.idle.shoppingmall.Entity.Product.Product">
        select * from product order by created_at desc
    </select>

    <select id="findAllByPdPriceDescUp" resultType="com.idle.shoppingmall.Entity.Product.Product">
        select * from product order by pd_price desc
    </select>

    <select id="findAllByPdPriceDescDown" resultType="com.idle.shoppingmall.Entity.Product.Product">
        select * from product order by pd_price asc
    </select>
    <update id="increaseLoveCount">
        update product set count_love = count_love +1 where product_id = #{productId}
    </update>

    <update id="decreaseLoveCount">
        UPDATE product
        SET count_love = CASE WHEN count_love > 0 THEN count_love - 1 ELSE 0 END
        WHERE product_id = #{productId}
    </update>
    <select id="findAllByLoveCountDesc" resultType="com.idle.shoppingmall.Entity.Product.Product">
        select * from product order by count_love desc
    </select>



</mapper>